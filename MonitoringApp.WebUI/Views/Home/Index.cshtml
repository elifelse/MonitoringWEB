@model MonitoringApp.WebUI.Models.DashboardViewModel

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Monitoring Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>

<div class="container mt-4">
    <h1 class="text-center">Monitoring Dashboard</h1>

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
    }

    <!-- Servis Sağlık Durumları -->
    <h2>Servis Sağlık Durumları</h2>
    <table class="table table-bordered">
        <thead>
            <tr class="table-primary">
                <th>ID</th>
                <th>Uygulama</th>
                <th>Durum</th>
                <th>Yanıt Süresi (ms)</th>
                <th>Son Kontrol</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in Model.ServiceHealthLogs)
            {
                <tr>
                    <td>@log.Id</td>
                    <td>@log.ApplicationId</td>
                    <td class="@(log.Status == "Healthy" ? "text-success" : log.Status == "Degraded" ? "text-warning" : "text-danger")">@log.Status</td>
                    <td>@log.ResponseTimeMs ms</td>
                    <td>@log.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Hata Logları -->
    <h2>Hata Logları</h2>
    <table class="table table-bordered">
        <thead>
            <tr class="table-danger">
                <th>Uygulama</th>
                <th>Hata Türü</th>
                <th>HTTP Kodu</th>
                <th>Açıklama</th>
                <th>Oluşturulma Zamanı</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var error in Model.Errors)
            {
                <tr>
                    <td>@error.ApplicationId</td>
                    <td>@error.ErrorType</td>
                    <td>@error.StatusCode</td>
                    <td>@error.Description</td>
                    <td>@error.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Job Sağlık Durumları -->
    <h2>Job Sağlık Durumları</h2>
    <table class="table table-bordered">
        <thead>
            <tr class="table-warning">
                <th>Uygulama</th>
                <th>Job Adı</th>
                <th>Son Çalışma</th>
                <th>Durum</th>
                <th>Hata Mesajı</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var job in Model.Jobs)
            {
                <tr>
                    <td>@job.ApplicationId</td>
                    <td>@job.JobName</td>
                    <td>@job.LastRun.ToString("yyyy-MM-dd HH:mm")</td>
                    <td class="@(job.Status == "Çalışıyor" ? "text-success" : "text-danger")">@job.Status</td>
                    <td>@job.ErrorMessage</td>
                </tr>
            }
        </tbody>
    </table>

    <h2>Yanıt Süresi Grafiği</h2>
<canvas id="responseTimeChart"></canvas>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var ctx = document.getElementById('responseTimeChart').getContext('2d');

        var labels = [];
        var responseTimes = [];

        @foreach (var log in Model.ServiceHealthLogs.OrderByDescending(x => x.CheckedAt).Take(10))
        {
            // C# tarihini string formatta JavaScript'e geçiriyoruz ve çift tırnak sorunu çözülmüş oluyor
            var checkedAtISO = @log.CheckedAt.ToString("yyyy-MM-ddTHH:mm:ss.fffZ"); 
            @:labels.push(new Date('@checkedAtISO').toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit', second: '2-digit' }));
            @:responseTimes.push(@(log.ResponseTimeMs.HasValue ? log.ResponseTimeMs.Value : 0));
        }

        new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels.reverse(),
                datasets: [{
                    label: 'Yanıt Süresi (ms)',
                    data: responseTimes.reverse(),
                    borderColor: 'blue',
                    backgroundColor: 'rgba(0, 123, 255, 0.5)',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>


</body>
</html>
